# Rime schema settings
# encoding: utf-8

schema:
  schema_id: cqlb_extended
  name: "超强两笔"
  version: "1.0"
  author:
    - 付东升
  description: |
    超强两笔。按 i 键临时拼音或者用拼音反查编码
  dependencies:
    - ipinyin
    - english
    - spelling_lb

menu:
  page_size: 6

switches:
  - name: ascii_mode
    reset: 0
    states: [ 中文, 西文 ]
  - name: new_spelling
    reset: 0
    states: [ 隐, 显 ]
  - name: new_hide_pinyin
    reset: 1
    states: [ 音, 哑 ]
  - name: full_shape
    states: [ 半角, 全角 ]
  - name: ascii_punct
    states: [ 句读, 符号 ]
  - name: zh_trad
    reset: 0
    states: [ 简,繁 ]
  - name: emoji_suggestion
    reset: 0
    states: ["🈚️", "🈶"]

engine:
  filters:
    - simplifier
    - lua_filter@new_spelling@spelling
    - uniquifier
    - simplifier@emoji_suggestion
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - affix_segmentor@mkst
    - affix_segmentor@veng
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - echo_translator
    - punct_translator
    - table_translator
    - table_translator@fixed
    - table_translator@mkst
    - table_translator@veng
    - lua_translator@cheatsheet
    - lua_translator@datetime
    - table_translator@i+

speller:
  alphabet: 'abcdefghijklmnopqrstuvwxyz;,./'
  initials: 'abcdefghijklmnopqrstuvwxyz'
  delimiter: "`"
  auto_clear: max_length
  auto_select: true 
  max_code_length: 4

translator:
  dictionary: cqlb.ext
  prism: cqlb
  initial_quality: 0
  enable_charset_filter: true
  enable_encoder: false
  enable_completion: true #逐码提示开关
  enable_sentence: false
  encode_commit_history: false
  enable_user_dict: false
  max_phrase_length: 4

fixed:
  __include: /translator
  initial_quality: 10
  enable_completion: true
  enable_encoder: true
  enable_user_dict: true
  db_class: tabledb

mkst:
  __include: /translator
  initial_quality: 10
  enable_sentence: true
  prefix: '`'
  tips: "〔精准造词〕"
  tag: mkst

# 繁简转换
simplifier:
  opencc_config: s2t.json
  option_name: zh_trad

# 调用 build 目录的 spelling_lb 文件以此来显示编码和拼音
lua_reverse_db:
  spelling: spelling_lb
  code: spelling_lb

# emoji 表情，调用 opencc 里的文件
emoji_suggestion:
  opencc_config: emoji.json
  option_name: emoji_suggestion
  tips: all
  
veng:
  dictionary: english
  tag: veng
  prefix: "'"
  suffix: " "
  tips: "〔临时英文〕"
  enable_completion: true
  enable_encoder: false
  enable_user_dict: false
  enable_sentence: false
  initial_quality: -1

# 打 i 键引导临时拼音
i+:
  dictionary: ipinyin
  enable_completion: true
  enable_sentence: false
  enable_encoder: false
  enable_user_dict: false
  initial_quality: -10

punctuator:
  import_preset:  symbols #symbols 使用rime自带符号文件|default 不使用
  full_shape: #全半角符号输出，调用symbols，如果常打某个符号，而其却在候选后面，其它候选符号用不到，可以在这里定义
    "/" : "、"
    "=" : "="
  half_shape:
    "/" : "、"
    "=" : "="

key_binder:
    bindings:
    - {accept: "Shift+Tab", send: Page_Up, when: composing}
    - {accept: Tab, send: Page_Down, when: composing}
    - {accept: minus, send: Page_Up, when: has_menu}
    - {accept: equal, send: Page_Down, when: has_menu}
    - {accept: "Control+Shift+4", toggle: zh_trad, when: always}
    - {accept: "Control+Shift+G", toggle: emoji_suggestion, when: always}
    - {accept: "Control+Shift+H", toggle: new_spelling, when: always}
    - {accept: "Control+Shift+J", toggle: new_hide_pinyin, when: always}
    - {accept: "Control+Shift+space", toggle: full_shape, when: always}
    - {accept: "Control+Shift+period", toggle: ascii_punct, when: always}
    - when: composing
      accept: Control+bracketleft
      send: Escape

recognizer:
  import_preset: default
  patterns:
    reverse_lookup: "^`[a-z]*'?$"
    i_reverse_lookup_pattern: "^i[a-z;,./]+$"
    mkst: "^[a-z,;/\\.]*`[a-z,;/\\.\\`]*$"
    url: "^(www[.]|https?:|ftp[.:]|mailto:|file:).*$"
    veng: "^'.*$"
